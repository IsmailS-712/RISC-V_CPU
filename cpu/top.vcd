$version Generated by VerilatedVcd $end
$date Fri Dec  9 17:07:21 2022 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 &! a0[0] [31:0] $end
  $var wire 32 0! a0[10] [31:0] $end
  $var wire 32 1! a0[11] [31:0] $end
  $var wire 32 2! a0[12] [31:0] $end
  $var wire 32 3! a0[13] [31:0] $end
  $var wire 32 4! a0[14] [31:0] $end
  $var wire 32 5! a0[15] [31:0] $end
  $var wire 32 6! a0[16] [31:0] $end
  $var wire 32 7! a0[17] [31:0] $end
  $var wire 32 8! a0[18] [31:0] $end
  $var wire 32 9! a0[19] [31:0] $end
  $var wire 32 '! a0[1] [31:0] $end
  $var wire 32 :! a0[20] [31:0] $end
  $var wire 32 ;! a0[21] [31:0] $end
  $var wire 32 <! a0[22] [31:0] $end
  $var wire 32 =! a0[23] [31:0] $end
  $var wire 32 >! a0[24] [31:0] $end
  $var wire 32 ?! a0[25] [31:0] $end
  $var wire 32 @! a0[26] [31:0] $end
  $var wire 32 A! a0[27] [31:0] $end
  $var wire 32 B! a0[28] [31:0] $end
  $var wire 32 C! a0[29] [31:0] $end
  $var wire 32 (! a0[2] [31:0] $end
  $var wire 32 D! a0[30] [31:0] $end
  $var wire 32 E! a0[31] [31:0] $end
  $var wire 32 )! a0[3] [31:0] $end
  $var wire 32 *! a0[4] [31:0] $end
  $var wire 32 +! a0[5] [31:0] $end
  $var wire 32 ,! a0[6] [31:0] $end
  $var wire 32 -! a0[7] [31:0] $end
  $var wire 32 .! a0[8] [31:0] $end
  $var wire 32 /! a0[9] [31:0] $end
  $var wire  1 $! clk $end
  $var wire  1 %! rst $end
  $scope module top $end
   $var wire  3 p ALUctrl [2:0] $end
   $var wire 32 w ALUout [31:0] $end
   $var wire  1 q ALUsrc $end
   $var wire  1 x EQ $end
   $var wire 32 i Imm [31:0] $end
   $var wire 32 t ImmOp [31:0] $end
   $var wire  2 r ImmSrc [1:0] $end
   $var wire  1 o MemWrite $end
   $var wire 32 h PC [31:0] $end
   $var wire  1 m PCsrc $end
   $var wire  1 s RegWrite $end
   $var wire 32 u Regop1 [31:0] $end
   $var wire 32 v Regop2 [31:0] $end
   $var wire 32 F! Result [31:0] $end
   $var wire  1 n Resultsrc $end
   $var wire 32 &! a0[0] [31:0] $end
   $var wire 32 0! a0[10] [31:0] $end
   $var wire 32 1! a0[11] [31:0] $end
   $var wire 32 2! a0[12] [31:0] $end
   $var wire 32 3! a0[13] [31:0] $end
   $var wire 32 4! a0[14] [31:0] $end
   $var wire 32 5! a0[15] [31:0] $end
   $var wire 32 6! a0[16] [31:0] $end
   $var wire 32 7! a0[17] [31:0] $end
   $var wire 32 8! a0[18] [31:0] $end
   $var wire 32 9! a0[19] [31:0] $end
   $var wire 32 '! a0[1] [31:0] $end
   $var wire 32 :! a0[20] [31:0] $end
   $var wire 32 ;! a0[21] [31:0] $end
   $var wire 32 <! a0[22] [31:0] $end
   $var wire 32 =! a0[23] [31:0] $end
   $var wire 32 >! a0[24] [31:0] $end
   $var wire 32 ?! a0[25] [31:0] $end
   $var wire 32 @! a0[26] [31:0] $end
   $var wire 32 A! a0[27] [31:0] $end
   $var wire 32 B! a0[28] [31:0] $end
   $var wire 32 C! a0[29] [31:0] $end
   $var wire 32 (! a0[2] [31:0] $end
   $var wire 32 D! a0[30] [31:0] $end
   $var wire 32 E! a0[31] [31:0] $end
   $var wire 32 )! a0[3] [31:0] $end
   $var wire 32 *! a0[4] [31:0] $end
   $var wire 32 +! a0[5] [31:0] $end
   $var wire 32 ,! a0[6] [31:0] $end
   $var wire 32 -! a0[7] [31:0] $end
   $var wire 32 .! a0[8] [31:0] $end
   $var wire 32 /! a0[9] [31:0] $end
   $var wire  1 $! clk $end
   $var wire 32 i instr [31:0] $end
   $var wire  5 l rd [4:0] $end
   $var wire  5 j rs1 [4:0] $end
   $var wire  5 k rs2 [4:0] $end
   $var wire  1 %! rst $end
   $scope module ALU $end
    $var wire  3 p ALUctrl [2:0] $end
    $var wire 32 u ALUop1 [31:0] $end
    $var wire 32 y ALUop2 [31:0] $end
    $var wire 32 w ALUout [31:0] $end
    $var wire  1 q ALUsrc $end
    $var wire  1 x EQ $end
    $var wire 32 t ImmOp [31:0] $end
    $var wire 32 v RegOp2 [31:0] $end
   $upscope $end
   $scope module control $end
    $var wire  3 p ALUctrl [2:0] $end
    $var wire  2 z ALUop [1:0] $end
    $var wire  1 q ALUsrc $end
    $var wire  1 x EQ $end
    $var wire  2 r ImmSrc [1:0] $end
    $var wire 32 i Instr [31:0] $end
    $var wire  1 o Memwrite $end
    $var wire  7 { Op [6:0] $end
    $var wire  1 m PCsrc $end
    $var wire  1 s RegWrite $end
    $var wire  1 n Resultsrc $end
    $var wire  3 | funct3 [14:12] $end
    $var wire  1 } funct7 $end
    $var wire 21 ~ unused [20:0] $end
   $upscope $end
   $scope module data_mem $end
    $var wire 32 w A [31:0] $end
    $var wire 32 ' RD [31:0] $end
    $var wire 32 F! Result [31:0] $end
    $var wire  1 n Resultsrc $end
    $var wire 32 v WD [31:0] $end
    $var wire  1 o WE $end
    $var wire  1 $! clk $end
    $var wire 32 % data_array[-1] [31:0] $end
    $var wire 32 & data_array[0] [31:0] $end
   $upscope $end
   $scope module instr_mem $end
    $var wire 32 h A [31:0] $end
    $var wire 32 i RD [31:0] $end
    $var wire 32 # rom_array[-1] [31:0] $end
    $var wire 32 $ rom_array[0] [31:0] $end
   $upscope $end
   $scope module pc $end
    $var wire 32 t ImmOp [31:0] $end
    $var wire 32 h PC_out [31:0] $end
    $var wire  1 m PCsrc $end
    $var wire 32 !! branch_PC [31:0] $end
    $var wire  1 $! clk $end
    $var wire 32 "! inc_PC [31:0] $end
    $var wire 32 #! next_PC [31:0] $end
    $var wire  1 %! rst $end
   $upscope $end
   $scope module register $end
    $var wire  5 j AD1 [4:0] $end
    $var wire  5 k AD2 [4:0] $end
    $var wire  5 l AD3 [4:0] $end
    $var wire 32 u RD1 [31:0] $end
    $var wire 32 v RD2 [31:0] $end
    $var wire 32 F! WD3 [31:0] $end
    $var wire  1 s WE3 $end
    $var wire 32 ( a0[0] [31:0] $end
    $var wire 32 2 a0[10] [31:0] $end
    $var wire 32 3 a0[11] [31:0] $end
    $var wire 32 4 a0[12] [31:0] $end
    $var wire 32 5 a0[13] [31:0] $end
    $var wire 32 6 a0[14] [31:0] $end
    $var wire 32 7 a0[15] [31:0] $end
    $var wire 32 8 a0[16] [31:0] $end
    $var wire 32 9 a0[17] [31:0] $end
    $var wire 32 : a0[18] [31:0] $end
    $var wire 32 ; a0[19] [31:0] $end
    $var wire 32 ) a0[1] [31:0] $end
    $var wire 32 < a0[20] [31:0] $end
    $var wire 32 = a0[21] [31:0] $end
    $var wire 32 > a0[22] [31:0] $end
    $var wire 32 ? a0[23] [31:0] $end
    $var wire 32 @ a0[24] [31:0] $end
    $var wire 32 A a0[25] [31:0] $end
    $var wire 32 B a0[26] [31:0] $end
    $var wire 32 C a0[27] [31:0] $end
    $var wire 32 D a0[28] [31:0] $end
    $var wire 32 E a0[29] [31:0] $end
    $var wire 32 * a0[2] [31:0] $end
    $var wire 32 F a0[30] [31:0] $end
    $var wire 32 G a0[31] [31:0] $end
    $var wire 32 + a0[3] [31:0] $end
    $var wire 32 , a0[4] [31:0] $end
    $var wire 32 - a0[5] [31:0] $end
    $var wire 32 . a0[6] [31:0] $end
    $var wire 32 / a0[7] [31:0] $end
    $var wire 32 0 a0[8] [31:0] $end
    $var wire 32 1 a0[9] [31:0] $end
    $var wire  1 $! clk $end
    $var wire 32 H reg_array[0] [31:0] $end
    $var wire 32 R reg_array[10] [31:0] $end
    $var wire 32 S reg_array[11] [31:0] $end
    $var wire 32 T reg_array[12] [31:0] $end
    $var wire 32 U reg_array[13] [31:0] $end
    $var wire 32 V reg_array[14] [31:0] $end
    $var wire 32 W reg_array[15] [31:0] $end
    $var wire 32 X reg_array[16] [31:0] $end
    $var wire 32 Y reg_array[17] [31:0] $end
    $var wire 32 Z reg_array[18] [31:0] $end
    $var wire 32 [ reg_array[19] [31:0] $end
    $var wire 32 I reg_array[1] [31:0] $end
    $var wire 32 \ reg_array[20] [31:0] $end
    $var wire 32 ] reg_array[21] [31:0] $end
    $var wire 32 ^ reg_array[22] [31:0] $end
    $var wire 32 _ reg_array[23] [31:0] $end
    $var wire 32 ` reg_array[24] [31:0] $end
    $var wire 32 a reg_array[25] [31:0] $end
    $var wire 32 b reg_array[26] [31:0] $end
    $var wire 32 c reg_array[27] [31:0] $end
    $var wire 32 d reg_array[28] [31:0] $end
    $var wire 32 e reg_array[29] [31:0] $end
    $var wire 32 J reg_array[2] [31:0] $end
    $var wire 32 f reg_array[30] [31:0] $end
    $var wire 32 g reg_array[31] [31:0] $end
    $var wire 32 K reg_array[3] [31:0] $end
    $var wire 32 L reg_array[4] [31:0] $end
    $var wire 32 M reg_array[5] [31:0] $end
    $var wire 32 N reg_array[6] [31:0] $end
    $var wire 32 O reg_array[7] [31:0] $end
    $var wire 32 P reg_array[8] [31:0] $end
    $var wire 32 Q reg_array[9] [31:0] $end
   $upscope $end
   $scope module signextend $end
    $var wire 32 i Imm [31:0] $end
    $var wire 32 t ImmOp [31:0] $end
    $var wire  2 r ImmSrc [1:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000 j
b00000 k
b00000 l
0m
0n
0o
b000 p
0q
b00 r
0s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
1x
b00000000000000000000000000000000 y
b00 z
b0000000 {
b000 |
0}
b000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000100 "!
b00000000000000000000000000000100 #!
0$!
0%!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b00000000000000000000000000000000 ;!
b00000000000000000000000000000000 <!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
b00000000000000000000000000000000 A!
b00000000000000000000000000000000 B!
b00000000000000000000000000000000 C!
b00000000000000000000000000000000 D!
b00000000000000000000000000000000 E!
b00000000000000000000000000000000 F!
